---

- name: "Creates backend app directory"
  file:
    path: ~/backend
    state: directory

- name: "Unarchive backend files"
  unarchive:
    src: artifact.tar.gz
    dest: ~/backend

- name: "Install dependancies"
  become: true
  shell: |
    curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -
    apt-get install -y nodejs
    apt-get install gcc g++ make -y
    npm install -g npm
    npm install -g pm2
    #
    #

- name: "Start Backend"
  shell: |
    /usr/bin/pm2 start /home/ubuntu/backend/home/circleci/project/backend/dist/main.js --name backend -f
  environment:
    ENVIRONMENT: production
    NODE_ENV: production
    TYPEORM_CONNECTION: postgres
    TYPEORM_MIGRATIONS_DIR: ~/src/migrations
    TYPEORM_MIGRATIONS: ~/src/migrations/*.ts
    TYPEORM_ENTITIES: ~/src/modules/domain/**/*.entity.ts
    TYPEORM_HOST: database-ric.cwzausiamzmt.us-east-1.rds.amazonaws.com
    TYPEORM_PORT: 5432
    TYPEORM_USERNAME: postgres
    TYPEORM_PASSWORD: mypasswordmy
    TYPEORM_DATABASE: postgres    

# - name: "Installing Node Dependencies"
#   become: true
#   apt: 
#     name: ["nodejs", "npm"]
#     state: present
#     update_cache: yes

# - name: "Executing Node app with PM2"
#   become: true
#   shell: |
#     cd ~/backend
#     npm i
#     pm2 stop default
#     pm2 start npm -- run start
#   register: exe_node_app

# - name: "Installing Node Dependencies"
#   become: true
#   shell: |
#     cd ~/backend
#     npm i

# - name: "Executing Node app with PM2"
#   become: true
#   shell: |
#     cd ~/backend
#     pm2 stop default
#     #pm2 start main.js
#     pm2 start npm -- start
#   register: exe_node_app

# - name: "Configure pm2 to start as service"
#   shell: |
#     sudo su -c "env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu"
#     pm2 save

- name: log Executing node
  debug:
    msg: "{{ exe_node_app.stdout_lines }}"
